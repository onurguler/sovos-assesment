// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sovos.Invoicing.Persistence;

#nullable disable

namespace Sovos.Invoicing.Persistence.Migrations
{
    [DbContext(typeof(InvoicingDbContext))]
    [Migration("20230401173633_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sovos.Invoicing.Domain.Entities.Invoices.Invoice", b =>
                {
                    b.Property<string>("InvoiceId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoices", (string)null);
                });

            modelBuilder.Entity("Sovos.Invoicing.Domain.Entities.Invoices.InvoiceLineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLineItems", (string)null);
                });

            modelBuilder.Entity("Sovos.Invoicing.Domain.Entities.Invoices.InvoiceQueue", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ExecutedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FailureReason")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastExecutedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("InvoiceQueue", (string)null);
                });

            modelBuilder.Entity("Sovos.Invoicing.Domain.Entities.Invoices.Invoice", b =>
                {
                    b.OwnsOne("Sovos.Invoicing.Domain.ValueObjects.Name", "ReceiverTitle", b1 =>
                        {
                            b1.Property<string>("InvoiceId")
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("ReceiverTitle");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoices");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsOne("Sovos.Invoicing.Domain.ValueObjects.Name", "SenderTitle", b1 =>
                        {
                            b1.Property<string>("InvoiceId")
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("SenderTitle");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoices");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.Navigation("ReceiverTitle")
                        .IsRequired();

                    b.Navigation("SenderTitle")
                        .IsRequired();
                });

            modelBuilder.Entity("Sovos.Invoicing.Domain.Entities.Invoices.InvoiceLineItem", b =>
                {
                    b.HasOne("Sovos.Invoicing.Domain.Entities.Invoices.Invoice", null)
                        .WithMany("LineItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Sovos.Invoicing.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("InvoiceLineItemId")
                                .HasColumnType("integer");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("Name");

                            b1.HasKey("InvoiceLineItemId");

                            b1.ToTable("InvoiceLineItems");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceLineItemId");
                        });

                    b.OwnsOne("Sovos.Invoicing.Domain.ValueObjects.UnitCode", "UnitCode", b1 =>
                        {
                            b1.Property<int>("InvoiceLineItemId")
                                .HasColumnType("integer");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("UnitCode");

                            b1.HasKey("InvoiceLineItemId");

                            b1.ToTable("InvoiceLineItems");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceLineItemId");
                        });

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("UnitCode")
                        .IsRequired();
                });

            modelBuilder.Entity("Sovos.Invoicing.Domain.Entities.Invoices.Invoice", b =>
                {
                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
